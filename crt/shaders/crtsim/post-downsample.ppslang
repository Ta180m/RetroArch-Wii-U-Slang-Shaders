#version 450

















layout(push_constant)uniform Push
{
 vec4 SourceSize;
 vec4 OriginalSize;
 vec4 OutputSize;
 uint FrameCount;
 float bloom_scale_down;
} params;

#pragma parameterbloom_scale_down¡0.0150.00.030.001

layout(std140, set = 0, binding = 0)uniform UBO
{
 mat4 MVP;
} global;











const vec2 Poisson0 = vec2(0.000000, 0.000000);
const vec2 Poisson1 = vec2(0.000000, 1.000000);
const vec2 Poisson2 = vec2(0.000000, - 1.000000);
const vec2 Poisson3 = vec2(- 0.866025, 0.500000);
const vec2 Poisson4 = vec2(- 0.866025, - 0.500000);
const vec2 Poisson5 = vec2(0.866025, 0.500000);
const vec2 Poisson6 = vec2(0.866025, - 0.500000);

const float InvNumSamples = 0.1428571428571429;

#pragma stagevertex
layout(location = 0)in vec4 Position;
layout(location = 1)in vec2 TexCoord;
layout(location = 0)out vec2 vTexCoord;

void main()
{
   gl_Position = global . MVP * Position;
   vTexCoord = TexCoord;
}

#pragma stagefragment
layout(location = 0)in vec2 vTexCoord;
layout(location = 0)out vec4 FragColor;
layout(set = 0, binding = 2)uniform sampler2D Original;


void main()
{
 vec4 bloom = vec4(0.0);
 vec2 BloomScale = vec2(params . bloom_scale_down);
 bloom += texture(Original, vTexCoord +(Poisson0 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson1 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson2 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson3 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson4 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson5 * BloomScale));
 bloom += texture(Original, vTexCoord +(Poisson6 * BloomScale));
 bloom *= InvNumSamples;

   FragColor = vec4(bloom);
}
