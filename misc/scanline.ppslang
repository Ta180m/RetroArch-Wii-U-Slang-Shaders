#version 450

layout(push_constant)uniform Push
{
 vec4 SourceSize;
 vec4 OriginalSize;
 vec4 OutputSize;
 uint FrameCount;
 float SCANLINE_BASE_BRIGHTNESS;
 float SCANLINE_SINE_COMP_A;
 float SCANLINE_SINE_COMP_B;
} params;

#pragma parameterSCANLINE_BASE_BRIGHTNESS¡0.950.01.00.01
#pragma parameterSCANLINE_SINE_COMP_A¡0.00.00.100.01
#pragma parameterSCANLINE_SINE_COMP_B¡0.150.01.00.05





layout(std140, set = 0, binding = 0)uniform UBO
{
 mat4 MVP;
} global;



#pragma stagevertex
layout(location = 0)in vec4 Position;
layout(location = 1)in vec2 TexCoord;
layout(location = 0)out vec2 vTexCoord;
layout(location = 1)out vec2 omega;

void main()
{
   gl_Position = global . MVP * Position;
   vTexCoord = TexCoord;

   omega = vec2(3.141592654 * params . OutputSize . x, 2.0 * 3.141592654 * params . SourceSize . y);
}

#pragma stagefragment
layout(location = 0)in vec2 vTexCoord;
layout(location = 1)in vec2 omega;
layout(location = 0)out vec4 FragColor;
layout(set = 0, binding = 2)uniform sampler2D Source;

void main()
{
   vec2 sine_comp = vec2(params . SCANLINE_SINE_COMP_A, params . SCANLINE_SINE_COMP_B);
   vec3 res = texture(Source, vTexCoord). xyz;
   vec3 scanline = res *(params . SCANLINE_BASE_BRIGHTNESS + dot(sine_comp * sin(vTexCoord * omega), vec2(1.0, 1.0)));
   FragColor = vec4(scanline . x, scanline . y, scanline . z, 1.0);
}
