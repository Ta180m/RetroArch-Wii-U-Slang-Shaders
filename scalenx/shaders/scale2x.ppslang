#version 450
















layout(push_constant)uniform Push
{
 vec4 SourceSize;
 vec4 OriginalSize;
 vec4 OutputSize;
 uint FrameCount;
} params;

layout(std140, set = 0, binding = 0)uniform UBO
{
 mat4 MVP;
} global;






















bool eq(vec3 A, vec3 B){
 return(A == B);
}

bool neq(vec3 A, vec3 B){
 return(A != B);
}

#pragma stagevertex
layout(location = 0)in vec4 Position;
layout(location = 1)in vec2 TexCoord;
layout(location = 0)out vec2 texCoord;
layout(location = 1)out vec4 t1;
layout(location = 2)out vec4 t2;

void main()
{
   gl_Position = global . MVP * Position;
   texCoord = TexCoord;

         vec2 ps = vec2(params . SourceSize . z, params . SourceSize . w);
 float dx = ps . x;
 float dy = ps . y;

 t1 = TexCoord . xyxy + vec4(0, - dy, - dx, 0);
 t2 = TexCoord . xyxy + vec4(dx, 0, 0, dy);
}

#pragma stagefragment
layout(location = 0)in vec2 texCoord;
layout(location = 1)in vec4 t1;
layout(location = 2)in vec4 t2;
layout(location = 0)out vec4 FragColor;
layout(set = 0, binding = 2)uniform sampler2D Source;

void main()
{

      vec2 fp = floor(2.0 * fract(texCoord * params . SourceSize . xy));








      vec3 B = texture(Source, t1 . xy). xyz;
      vec3 D = texture(Source, t1 . zw). xyz;
      vec3 E = texture(Source, texCoord). xyz;
      vec3 F = texture(Source, t2 . xy). xyz;
      vec3 H = texture(Source, t2 . zw). xyz;


      vec3 E0 = eq(B, D)? B : E;
      vec3 E1 = eq(B, F)? B : E;
      vec3 E2 = eq(H, D)? H : E;
      vec3 E3 = eq(H, F)? H : E;


 FragColor = vec4(neq(B, H)&& neq(D, F)?(fp . y == 0 ?(fp . x == 0 ? E0 : E1):(fp . x == 0 ? E2 : E3)): E, 1.0);
}
