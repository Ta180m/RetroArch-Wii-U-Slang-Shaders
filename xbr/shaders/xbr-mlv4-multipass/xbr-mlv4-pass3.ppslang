#version 450



























layout(push_constant)uniform Push
{
 vec4 SourceSize;
 vec4 OriginalSize;
 vec4 OutputSize;
 uint FrameCount;
 vec4 REFSize;
} params;

layout(std140, set = 0, binding = 0)uniform UBO
{
 mat4 MVP;
} global;




















const float coef = 2.0;
const float cf = 4.0;
const float eq_threshold = 15.0;
const float y_weight = 48.0;
const float u_weight = 7.0;
const float v_weight = 6.0;
const mat3x3 yuv = mat3x3(0.299, 0.587, 0.114, - 0.169, - 0.331, 0.499, 0.499, - 0.418, - 0.0813);
const mat3x3 yuv_weighted = mat3x3(y_weight * yuv[0], u_weight * yuv[1], v_weight * yuv[2]);
const vec4 maximo = vec4(255.0, 255.0, 255.0, 255.0);
const vec4 low = vec4(- 64.0, - 64.0, - 64.0, - 64.0);
const vec4 high = vec4(64.0, 64.0, 64.0, 64.0);


const mat2x4 sym_vectors = mat2x4(1., 1., - 1., - 1., 1., - 1., - 1., 1.);


const vec3 lines[13]= vec3[](
        vec3(4.0, 4.0, 4.0),
        vec3(4.0, 4.0, 3.0),
        vec3(4.0, 4.0, 2.0),
        vec3(8.0, 4.0, 2.0),
        vec3(4.0, 8.0, 2.0),
       vec3(12.0, 4.0, 2.0),
        vec3(4.0, 12.0, 2.0),
       vec3(16.0, 4.0, 2.0),
        vec3(4.0, 16.0, 2.0),

       vec3(12.0, 4.0, 6.0),
        vec3(4.0, 12.0, 6.0),
       vec3(16.0, 4.0, 6.0),
        vec3(4.0, 16.0, 6.0)
);

     vec4 remapTo01(vec4 v, vec4 low, vec4 high)
{
 return clamp((v - low)/(high - low), 0.0, 1.0);
}

float remapFrom01(float v, float high)
{
 return floor((high * v)+ 0.5);
}

float df(float A, float B)
{
 return abs(A - B);
}

bool eq(float A, float B)
{
 return(df(A, B)< eq_threshold);
}

float weighted_distance(float a, float b, float c, float d, float e, float f, float g, float h)
{
 return(df(a, b)+ df(a, c)+ df(d, e)+ df(d, f)+ 4.0 * df(g, h));
}

#pragma stagevertex
layout(location = 0)in vec4 Position;
layout(location = 1)in vec2 TexCoord;
layout(location = 0)out vec2 vTexCoord;
layout(location = 1)out vec4 t1;

void main()
{
   gl_Position = global . MVP * Position;
   vTexCoord = TexCoord * 1.0004;
      vec2 ps = vec2(1.0 / params . REFSize . x, 1.0 / params . REFSize . y);
 float dx = ps . x;
 float dy = ps . y;









 t1 = vec4(dx, 0., 0., dy);
}

#pragma stagefragment
layout(location = 0)in vec2 vTexCoord;
layout(location = 1)in vec4 t1;
layout(location = 0)out vec4 FragColor;
layout(set = 0, binding = 2)uniform sampler2D Source;
layout(set = 0, binding = 3)uniform sampler2D REF;

void main()
{
 float px;

      vec2 pos =(fract(vTexCoord * params . REFSize . xy))- vec2(0.5, 0.5);
      vec2 dir = sign(pos);

      vec2 g1 = dir *(clamp(- dir . y * dir . x, 0.0, 1.0)* t1 . zw + clamp(dir . y * dir . x, 0.0, 1.0)* t1 . xy);
      vec2 g2 = dir *(clamp(dir . y * dir . x, 0.0, 1.0)* t1 . zw + clamp(- dir . y * dir . x, 0.0, 1.0)* t1 . xy);

      vec3 E = texture(REF, vTexCoord). rgb;
      vec3 F = texture(REF, vTexCoord + g1). rgb;
      vec3 H = texture(REF, vTexCoord + g2). rgb;
      vec3 I = texture(REF, vTexCoord + g1 + g2). rgb;
      vec3 F4 = texture(REF, vTexCoord + 2.0 * g1). rgb;
      vec3 H5 = texture(REF, vTexCoord + 2.0 * g2). rgb;

 float e = dot(E, yuv_weighted[0]);
 float f = dot(F, yuv_weighted[0]);
 float h = dot(H, yuv_weighted[0]);
 float i = dot(I, yuv_weighted[0]);
 float f4 = dot(F4, yuv_weighted[0]);
 float h5 = dot(H5, yuv_weighted[0]);

      vec4 icomp = floor((clamp((sym_vectors * dir), 0.0, 1.0))+ 0.5);

 float infoE = remapFrom01(dot(texture(Source, vTexCoord), icomp), 255.0);
 float infoF = remapFrom01(dot(texture(Source, vTexCoord + g1), icomp), 255.0);
 float infoH = remapFrom01(dot(texture(Source, vTexCoord + g2), icomp), 255.0);

      vec4 lparam;
      vec2 addr;

 if(infoF == 8.0)
 {
  lparam . xyz = lines[12];
  px = float(df(f, f4)<= df(f, i));
  addr . x = 2. * px + clamp(1.0 - px, 0.0, 1.0);
  addr . y = clamp(1.0 - px, 0.0, 1.0);
 }
 else if(infoH == 7.0)
 {
  lparam . xyz = lines[11];
  px = float(df(h, h5)<= df(h, i));
  addr . x = clamp(1.0 - px, 0.0, 1.0);
  addr . y = 2. * px + clamp(1.0 - px, 0.0, 1.0);
 }
 else if(infoF == 6.0)
 {
  lparam . xyz = lines[10];
  px = float(df(f, f4)<= df(f, i));
  addr . x = 2. * px + clamp(1.0 - px, 0.0, 1.0);
  addr . y = clamp(1.0 - px, 0.0, 1.0);
 }
 else if(infoH == 5.0)
 {
  lparam . xyz = lines[9];
  px = float(df(h, h5)<= df(h, i));
  addr . x = clamp(1.0 - px, 0.0, 1.0);
  addr . y = 2. * px + clamp(1.0 - px, 0.0, 1.0);
 }
 else
 {
  px = float(df(e, f)<= df(e, h));
  addr . x = px;
  addr . y = clamp(1.0 - px, 0.0, 1.0);

  lparam . xyz =(infoE == 8.0)? lines[8]:((infoE == 7.0)? lines[7]:((infoE == 6.0)? lines[6]:((infoE == 5.0)? lines[5]:((infoE == 4.0)? lines[4]:((infoE == 3.0)? lines[3]:((infoE == 2.0)? lines[2]:((infoE == 1.0)? lines[1]: lines[0])))))));
 }

 bool inv =(dir . x * dir . y)< 0.0 ? true : false;


 addr = addr * dir . yx;
 addr = inv ? addr . yx : addr;


 lparam . xy = lparam . xy * dir . yx;
 lparam . xy = inv ? lparam . yx : lparam . xy;

 addr . x += 2.0;
 addr . y += 2.0;

 lparam . w = addr . x * 8.0 + addr . y;

    FragColor = vec4(remapTo01(lparam, low, high));
}
