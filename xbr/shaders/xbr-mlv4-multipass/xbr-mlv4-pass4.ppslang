#version 450



























layout(push_constant)uniform Push
{
 vec4 SourceSize;
 vec4 OriginalSize;
 vec4 OutputSize;
 uint FrameCount;
 vec4 REFSize;
} params;

layout(std140, set = 0, binding = 0)uniform UBO
{
 mat4 MVP;
} global;





















const vec3 bin = vec3(4.0, 2.0, 1.0);
const vec4 low = vec4(- 64.0, - 64.0, - 64.0, - 64.0);
const vec4 high = vec4(64.0, 64.0, 64.0, 64.0);

const mat2x4 sym_vectors = mat2x4(1., 1., - 1., - 1., 1., - 1., - 1., 1.);

     vec4 remapFrom01(vec4 v, vec4 low, vec4 high)
{
 return floor((mix(low, high, v))+ 0.5);
}

float c_df(vec3 c1, vec3 c2)
{
      vec3 df = abs(c1 - c2);
 return df . r + df . g + df . b;
}


     vec4 unpack_info(float i)
{
      vec4 info;
 info . x = floor((modf(i / 2.0, i))+ 0.5);
 info . y = floor((modf(i / 2.0, i))+ 0.5);
 info . z = floor((modf(i / 2.0, i))+ 0.5);
 info . w = i;

 return info;
}


float df(float A, float B)
{
 return abs(A - B);
}













#pragma stagevertex
layout(location = 0)in vec4 Position;
layout(location = 1)in vec2 TexCoord;
layout(location = 0)out vec2 vTexCoord;
layout(location = 1)out vec4 t1;
layout(location = 2)out float scale_factor;

void main()
{
   gl_Position = global . MVP * Position;
   vTexCoord = TexCoord * 1.0001;
      vec2 ps = vec2(1.0 / params . REFSize . x, 1.0 / params . REFSize . y);
 float dx = ps . x;
 float dy = ps . y;









 t1 = vec4(dx, 0., 0., dy);
 scale_factor = params . OutputSize . x / params . REFSize . x;
}

#pragma stagefragment
layout(location = 0)in vec2 vTexCoord;
layout(location = 1)in vec4 t1;
layout(location = 2)in float scale_factor;
layout(location = 0)out vec4 FragColor;
layout(set = 0, binding = 2)uniform sampler2D Source;
layout(set = 0, binding = 3)uniform sampler2D REF;

void main()
{
      vec2 fp =(fract(vTexCoord * params . REFSize . xy))- vec2(0.5, 0.5);

      vec2 pxcoord = floor(vTexCoord * params . REFSize . xy)/ params . REFSize . xy;

      vec4 UL = texture(Source, pxcoord + 0.25 * t1 . xy + 0.25 * t1 . zw);
      vec4 UR = texture(Source, pxcoord + 0.75 * t1 . xy + 0.25 * t1 . zw);
      vec4 DL = texture(Source, pxcoord + 0.25 * t1 . xy + 0.75 * t1 . zw);
      vec4 DR = texture(Source, pxcoord + 0.75 * t1 . xy + 0.75 * t1 . zw);

      vec4 ulparam = remapFrom01(UL, low, high);
      vec4 urparam = remapFrom01(UR, low, high);
      vec4 dlparam = remapFrom01(DL, low, high);
      vec4 drparam = remapFrom01(DR, low, high);

      vec3 E = texture(REF, vTexCoord). xyz;

      vec3 ax, ay, PX, PY, PZ, PW;
 float info;
      vec2 iq;







                        info = ulparam . w;ay . z = floor((modf(info / 1.9999, info))+ 0.5);ay . y = floor((modf(info / 1.9999, info))+ 0.5);ay . x = floor((modf(info / 1.9999, info))+ 0.5);ax . z = floor((modf(info / 1.9999, info))+ 0.5);ax . y = floor((modf(info / 1.9999, info))+ 0.5);ax . x = floor((info)+ 0.5);iq . x = dot(ax, bin)- 1.9999;iq . y = dot(ay, bin)- 1.9999;PX = texture(REF, vTexCoord + iq . x * t1 . xy + iq . y * t1 . zw). xyz;;
                        info = urparam . w;ay . z = floor((modf(info / 1.9999, info))+ 0.5);ay . y = floor((modf(info / 1.9999, info))+ 0.5);ay . x = floor((modf(info / 1.9999, info))+ 0.5);ax . z = floor((modf(info / 1.9999, info))+ 0.5);ax . y = floor((modf(info / 1.9999, info))+ 0.5);ax . x = floor((info)+ 0.5);iq . x = dot(ax, bin)- 1.9999;iq . y = dot(ay, bin)- 1.9999;PY = texture(REF, vTexCoord + iq . x * t1 . xy + iq . y * t1 . zw). xyz;;
                        info = dlparam . w;ay . z = floor((modf(info / 1.9999, info))+ 0.5);ay . y = floor((modf(info / 1.9999, info))+ 0.5);ay . x = floor((modf(info / 1.9999, info))+ 0.5);ax . z = floor((modf(info / 1.9999, info))+ 0.5);ax . y = floor((modf(info / 1.9999, info))+ 0.5);ax . x = floor((info)+ 0.5);iq . x = dot(ax, bin)- 1.9999;iq . y = dot(ay, bin)- 1.9999;PZ = texture(REF, vTexCoord + iq . x * t1 . xy + iq . y * t1 . zw). xyz;;
                        info = drparam . w;ay . z = floor((modf(info / 1.9999, info))+ 0.5);ay . y = floor((modf(info / 1.9999, info))+ 0.5);ay . x = floor((modf(info / 1.9999, info))+ 0.5);ax . z = floor((modf(info / 1.9999, info))+ 0.5);ax . y = floor((modf(info / 1.9999, info))+ 0.5);ax . x = floor((info)+ 0.5);iq . x = dot(ax, bin)- 1.9999;iq . y = dot(ay, bin)- 1.9999;PW = texture(REF, vTexCoord + iq . x * t1 . xy + iq . y * t1 . zw). xyz;;


      vec3 fp1 = vec3(fp, - 1.);

      vec3 color;
      vec4 fx;

      vec4 inc = vec4(abs(ulparam . x / ulparam . y), abs(urparam . x / urparam . y), abs(dlparam . x / dlparam . y), abs(drparam . x / drparam . y));
      vec4 level = max(inc, 1.0 / inc);

 fx . x = clamp(dot(fp1, ulparam . xyz)* scale_factor /(8. * level . x)+ 0.5, 0.0, 1.0);
 fx . y = clamp(dot(fp1, urparam . xyz)* scale_factor /(8. * level . y)+ 0.5, 0.0, 1.0);
 fx . z = clamp(dot(fp1, dlparam . xyz)* scale_factor /(8. * level . z)+ 0.5, 0.0, 1.0);
 fx . w = clamp(dot(fp1, drparam . xyz)* scale_factor /(8. * level . w)+ 0.5, 0.0, 1.0);

      vec3 c1, c2, c3, c4;

 c1 = mix(E, PX, fx . x);
 c2 = mix(E, PY, fx . y);
 c3 = mix(E, PZ, fx . z);
 c4 = mix(E, PW, fx . w);

 color = c1;
 color =((c_df(c2, E)> c_df(color, E)))? c2 : color;
 color =((c_df(c3, E)> c_df(color, E)))? c3 : color;
 color =((c_df(c4, E)> c_df(color, E)))? c4 : color;

    FragColor = vec4(color, 1.0);
}
